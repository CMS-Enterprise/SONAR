version: "3.9"
services:
  postgresql:
    image: postgres:14-alpine
    restart: always
    ports: ["5432:5432"]
    environment:
      POSTGRES_DB: sonar
      POSTGRES_USER: root
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-password}"
    volumes:
      - "dataVolume:/var/lib/postgresql/data:rw"
    networks:
      - "shared"

  prometheus:
    image: prom/prometheus:v2.38.0
    restart: always
    ports: ["9090:9090"]
    volumes:
      - "./config/development/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "tsdbVolume:/prometheus:rw"
    command:
      - "--web.enable-remote-write-receiver"
      - "--storage.tsdb.retention.time=10d"
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    networks:
      - "shared"

  test-metric-app:
    build: ./test/test-metric-app
    restart: unless-stopped
    ports: ["2020:2020"]
    networks:
      - "shared"

  http-metric-test-app:
    build: ./test/http-metric-test-app
    restart: unless-stopped
    ports: ["8082:8082"]
    networks:
      - "shared"

  sonar-agent:
    build:
      context: ./
      dockerfile: Dockerfile.agent
    depends_on:
      - "sonar-api"
    command: "/sonar/config/service-config.json"
    restart: unless-stopped
    environment:
      APICONFIG__BASEURL: "http://sonar-api:8081/"
      PROMETHEUS__HOST: "prometheus"
    volumes:
      - "./sonar-agent/service-config.json:/sonar/config/service-config.json:ro"
    networks:
      - "shared"

  sonar-api:
    build:
      context: ./
      dockerfile: Dockerfile.api
    restart: unless-stopped
    ports: ["8081:8081"]
    environment:
      ASPNETCORE_ENVIRONMENT: "DockerCompose"
    volumes:
      - "./sonar-api/appsettings.DockerCompose.json:/sonar/sonar-api/appsettings.DockerCompose.json:ro"
    networks:
      - "shared"

volumes:
  dataVolume: {}
  tsdbVolume: {}

networks:
  shared:
