include: .gitlab-ci/shared-pipeline-variables.yml

stages:
  - deploy

.deploy:
  stage: deploy
  trigger:
    include:
      - project: devops-pipelines/pipeline-triggers
        ref: $PIPELINE_TRIGGERS_VERSION
        file: deployment.yaml
    strategy: depend

.api-deploy-vars: &api-deploy-vars
  TARGET_SERVICE: $API_PROJECT_NAME
  APP_IMAGE_SRC: $API_APP_IMAGE_SRC

.agent-deploy-vars: &agent-deploy-vars
  TARGET_SERVICE: $AGENT_PROJECT_NAME
  APP_IMAGE_SRC: $AGENT_APP_IMAGE_SRC

.ui-deploy-vars: &ui-deploy-vars
  TARGET_SERVICE: $UI_PROJECT_NAME
  APP_IMAGE_SRC: $UI_APP_IMAGE_SRC

# Automatic deployment pipeline trigger jobs for lower realms.
# These must all be run serially! Each triggered pipeline pushes a commit to the same branch
# of the Sonar manifests repo. If they ran in parallel starting at the same time (thus, with
# the same initial commit ref for the branch), after one of them pushes it's commit successfully,
# all others would fail because they don't have the new commit from the first one. It'd be like a
# bunch of devs pushing conflicting updates to the same code without rebasing/syncing each others
# changes, someone will always get a merge conflict.
deploy-api-dev:
  extends: .deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH_NAME && $CI_COMMIT_TAG == null
  variables:
    TARGET_ENVIRONMENT: dev
    <<: *api-deploy-vars

deploy-agent-dev:
  needs: [ deploy-api-dev ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH_NAME && $CI_COMMIT_TAG == null
  variables:
    TARGET_ENVIRONMENT: dev
    <<: *agent-deploy-vars

deploy-ui-dev:
  needs: [ deploy-agent-dev ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH_NAME && $CI_COMMIT_TAG == null
  variables:
    TARGET_ENVIRONMENT: dev
    <<: *ui-deploy-vars

deploy-api-k3d:
  needs: [ deploy-ui-dev ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH_NAME && $CI_COMMIT_TAG == null
  variables:
    TARGET_ENVIRONMENT: k3d
    <<: *api-deploy-vars

deploy-agent-k3d:
  needs: [ deploy-api-k3d ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH_NAME && $CI_COMMIT_TAG == null
  variables:
    TARGET_ENVIRONMENT: k3d
    <<: *agent-deploy-vars

deploy-ui-k3d:
  needs: [ deploy-agent-k3d ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH_NAME && $CI_COMMIT_TAG == null
  variables:
    TARGET_ENVIRONMENT: k3d
    <<: *ui-deploy-vars

deploy-api-impl:
  needs: [ deploy-ui-k3d ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH_NAME && $CI_COMMIT_TAG == null
  variables:
    TARGET_ENVIRONMENT: impl
    <<: *api-deploy-vars

deploy-agent-impl:
  needs: [ deploy-api-impl ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH_NAME && $CI_COMMIT_TAG == null
  variables:
    TARGET_ENVIRONMENT: impl
    <<: *agent-deploy-vars

deploy-ui-impl:
  needs: [ deploy-agent-impl ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH_NAME && $CI_COMMIT_TAG == null
  variables:
    TARGET_ENVIRONMENT: impl
    <<: *ui-deploy-vars

# Deployment pipeline trigger jobs for the upper realms; automatic deployment for test, manual for prod.
# These must also be run serially, for the same reasons as the lower realms! However, these jobs run
# under different conditions (orthogonal to the lower realm conditions) and don't depend on the lower
# realm jobs; they form a different "chain" of deployments.
deploy-api-test:
  extends: .deploy
  rules:
    - if: $CI_COMMIT_TAG =~ $VERSION_TAG_REGEX
  variables:
    TARGET_ENVIRONMENT: test
    <<: *api-deploy-vars
    APP_IMAGE_TAG: $CI_COMMIT_TAG

deploy-agent-test:
  needs: [ deploy-api-test ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_TAG =~ $VERSION_TAG_REGEX
  variables:
    TARGET_ENVIRONMENT: test
    <<: *agent-deploy-vars
    APP_IMAGE_TAG: $CI_COMMIT_TAG

deploy-ui-test:
  needs: [ deploy-agent-test ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_TAG =~ $VERSION_TAG_REGEX
  variables:
    TARGET_ENVIRONMENT: test
    <<: *ui-deploy-vars
    APP_IMAGE_TAG: $CI_COMMIT_TAG

deploy-api-prod:
  needs: [ deploy-ui-test ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_TAG =~ $VERSION_TAG_REGEX
  when: manual
  variables:
    TARGET_ENVIRONMENT: prod
    <<: *api-deploy-vars
    APP_IMAGE_TAG: $CI_COMMIT_TAG

deploy-agent-prod:
  needs: [ deploy-api-prod ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_TAG =~ $VERSION_TAG_REGEX
  when: manual
  variables:
    TARGET_ENVIRONMENT: prod
    <<: *agent-deploy-vars
    APP_IMAGE_TAG: $CI_COMMIT_TAG

deploy-ui-prod:
  needs: [ deploy-agent-prod ]
  extends: .deploy
  rules:
    - if: $CI_COMMIT_TAG =~ $VERSION_TAG_REGEX
  when: manual
  variables:
    TARGET_ENVIRONMENT: prod
    <<: *ui-deploy-vars
    APP_IMAGE_TAG: $CI_COMMIT_TAG
