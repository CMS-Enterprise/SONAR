using System.Collections.Generic;

namespace System;

public static class HashCodes {
  /// <summary>
  ///   Generates a hash code for a sequence of elements by combining the hash codes for the individual
  ///   elements using <see cref="HashCode.Add{T}(T)" />.
  /// </summary>
  /// <remarks>
  ///   The hash codes generated by this function should be stable for the same sequence of values
  ///   regardless of when it is called, or why type of collection contains the values. However, hash
  ///   codes generated by this function are not stable across different instances of a process.
  /// </remarks>
  /// <param name="source">
  ///   The source of objects that will be combined to produce the resulting hash code.
  /// </param>
  /// <typeparam name="T">The type of element in the source collection.</typeparam>
  /// <returns>
  ///   A 32-bit hash code that corresponds to the objects in the source collection.
  /// </returns>
  public static Int32 From<T>(IEnumerable<T> source) {
    var hashCode = new HashCode();
    foreach (var value in source) {
      hashCode.Add(value);
    }

    return hashCode.ToHashCode();
  }
}
