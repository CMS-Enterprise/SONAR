configs:
  example-base-config:
    order: 1
    services:
      test-metric-app: {
        "displayName": "Test Application",
        "description": "A test application that generates arbitrary metrics for testing purpose",
        "url": "http://localhost:2020/metrics",
        "children": null,
        "healthChecks": {
          "example": {
            "description": "Degraded and Offline periodically based on an example metric.",
            "definition": {
              "duration": "0.00:00:20",
              "expression": "example_saw_wave",
              "conditions": [
                {
                  "operator": "GreaterThan",
                  "threshold": 60,
                  "status": "Offline"
                },
                {
                  "operator": "GreaterThan",
                  "threshold": 20,
                  "status": "Degraded"
                }
              ]
            },
            "type": "prometheusMetric"
          },
          "example-loki": {
            "description": "Example Loki Metric",
            "definition": {
              "duration": "0.00:00:10",
              "expression": "sum by (job) (count_over_time({job=\"Example.LokiLogMessage\", level=\"Error\"}[30s]))",
              "conditions": [
                {
                  "operator": "GreaterThan",
                  "threshold": 4,
                  "status": "Offline"
                },
                {
                  "operator": "GreaterThan",
                  "threshold": 3,
                  "status": "Degraded"
                },
                {
                  "operator": "GreaterThan",
                  "threshold": 2,
                  "status": "AtRisk"
                }
              ]
            },
            "type": "lokiMetric"
          }
        }
      }
      http-metric-test-app: {
        "displayName": "Test Application for HTTP Health Check",
        "description": "A test application that has one endpoint to simulate different HTTP status codes.",
        "url": "http://localhost:8082/api/ready",
        "children": null,
        "healthChecks": {
          "exampleHttpTest": {
            "description": "Check to see if request contains failed status code and/or request duration greater than specified threshold.",
            "definition": {
              "url": "http://localhost:8082/api/ready",
              "followRedirects": true,
              "authorizationHeader": "test-header",
              "conditions": [
                {
                  "status": "Online",
                  "statusCodes": [ 200 ],
                  "type": "HttpStatusCode"
                },
                {
                  "status": "Degraded",
                  "responseTime": "00:00:02",
                  "type": "HttpResponseTime"
                }
              ]
            },
            "type": "httpRequest"
          }
        }
      }
    rootServices: [ "test-metric-app", "http-metric-test-app" ]
  example-additional-config:
    order: 2
    services:
      test-metric-app2: {
        "displayName": "Test Application",
        "description": "A test application that generates arbitrary metrics for testing purpose",
        "url": "http://localhost:2020/metrics",
        "children": null,
        "healthChecks": {
          "example": {
            "description": "Degraded and Offline periodically based on an example metric.",
            "definition": {
              "duration": "0.00:00:20",
              "expression": "example_saw_wave",
              "conditions": [
                {
                  "operator": "GreaterThan",
                  "threshold": 60,
                  "status": "Offline"
                },
                {
                  "operator": "GreaterThan",
                  "threshold": 20,
                  "status": "Degraded"
                }
              ]
            }
          }
        }
      }
    rootServices: [ "test-metric-app2" ]
