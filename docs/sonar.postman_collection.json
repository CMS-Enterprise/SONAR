{
	"info": {
		"_postman_id": "3baeadbb-42f5-4a94-96d5-c3026c773038",
		"name": "SONAR",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20614257"
	},
	"item": [
		{
			"name": "API Keys",
			"item": [
				{
					"name": "API Keys",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/keys",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] API Keys",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/keys",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create API Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiKeyType\": \"Standard\",\n    \"environment\": \"{{TEST_ENVIRONMENT}}\",\n    \"tenant\": \"{{TEST_TENANT}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/keys",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Create API Key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiKeyType\": \"Standard\",\n    \"environment\": \"{{TEST_ENVIRONMENT}}\",\n    \"tenant\": \"{{TEST_TENANT}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/keys",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Admin Api Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ApiKeyType\": \"Admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/keys",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Create Admin Api Key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ApiKeyType\": \"Admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/keys",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete API Key",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/keys/ad8713ea-e21a-40c9-80c2-31352146f155",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"keys",
								"ad8713ea-e21a-40c9-80c2-31352146f155"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Delete API Key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/keys/9db92789-2672-480d-a25b-a7b9b1826db2",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"keys",
								"9db92789-2672-480d-a25b-a7b9b1826db2"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Service Hierarchy Configuration",
			"item": [
				{
					"name": "Get Service Hierarchy",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/config/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"config",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Service Hierarchy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"services\": [\n        {\n            \"name\": \"my-root\",\n            \"displayName\": \"My Root Service\",\n            \"description\": \"Example root service\",\n            \"url\": null,\n            \"healthChecks\": [\n                {\n                    \"name\": \"RootHealth\",\n                    \"description\": \"Desc\",\n                    \"type\": \"prometheusMetric\",\n                    \"definition\": {\n                        \"duration\": \"08:00:00\",\n                        \"expression\": \"promExpression1\",\n                        \"conditions\": [\n                            {\n                                \"healthOperator\": \"NotEqual\",\n                                \"threshold\": 1.0,\n                                \"healthStatus\": \"Offline\"\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"name\": \"RootHealth2\",\n                    \"type\": \"prometheusMetric\",\n                    \"description\": \"What Another Health Check?\",\n                    \"definition\": {\n                        \"duration\": \"08:00:00\",\n                        \"expression\": \"promExpression2\",\n                        \"conditions\": [\n                            {\n                                \"healthOperator\": \"GreaterThan\",\n                                \"threshold\": 1.0,\n                                \"healthStatus\": \"Online\"\n                            }\n                        ]\n                    }\n                }\n            ],\n            \"children\": [\n                \"my-child\",\n                \"my-child2\"\n            ]\n        },\n        {\n            \"name\": \"my-child\",\n            \"displayName\": \"My Child Service\",\n            \"description\": \"Example child service\",\n            \"url\": null,\n            \"children\": null\n        },\n        {\n            \"name\": \"my-child2\",\n            \"displayName\": \"My Child Service2\",\n            \"description\": \"Example child service2\",\n            \"url\": null,\n            \"children\": null\n        },\n        {\n            \"name\": \"http-metric-test-app\",\n            \"displayName\": \"Test Application for HTTP Health Check\",\n            \"description\": \"A test application that has one endpoint to simulate different HTTP status codes.\",\n            \"url\": \"http://localhost:8082/api/ready\",\n            \"children\": null,\n            \"healthChecks\": [\n                {\n                    \"name\": \"exampleHttpTest\",\n                    \"description\": \"Check to see if request contains failed status code and/or request duration greater than specified threshold.\",\n                    \"definition\": {\n                        \"url\": \"http://localhost:8082/api/ready\",\n                        \"followRedirects\": true,\n                        \"authorizationHeader\": \"test-header\",\n                        \"conditions\": [\n                            {\n                                \"status\": \"Online\",\n                                \"statusCodes\": [\n                                    200\n                                ],\n                                \"type\": \"HttpStatusCode\"\n                            },\n                            {\n                                \"status\": \"Degraded\",\n                                \"responseTime\": \"00:00:02\",\n                                \"type\": \"HttpResponseTime\"\n                            }\n                        ]\n                    },\n                    \"type\": \"httpRequest\"\n                }\n            ]\n        }\n    ],\n    \"rootServices\": [\n        \"my-root\",\n        \"http-metric-test-app\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/config/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"config",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Create Service Hierarchy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"services\": [\n        {\n            \"name\": \"my-root\",\n            \"displayName\": \"My Root Service\",\n            \"description\": \"Example root service\",\n            \"url\": null,\n            \"healthChecks\": [\n                {\n                    \"name\": \"RootHealth\",\n                    \"description\": \"Desc\",\n                    \"type\": \"prometheusMetric\",\n                    \"definition\": {\n                        \"duration\": \"08:00:00\",\n                        \"expression\": \"promExpression1\",\n                        \"conditions\": [\n                            {\n                                \"healthOperator\": \"NotEqual\",\n                                \"threshold\": 1.0,\n                                \"healthStatus\": \"Offline\"\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"name\": \"RootHealth2\",\n                    \"type\": \"prometheusMetric\",\n                    \"description\": \"What Another Health Check?\",\n                    \"definition\": {\n                        \"duration\": \"08:00:00\",\n                        \"expression\": \"promExpression2\",\n                        \"conditions\": [\n                            {\n                                \"healthOperator\": \"GreaterThan\",\n                                \"threshold\": 1.0,\n                                \"healthStatus\": \"Online\"\n                            }\n                        ]\n                    }\n                }\n            ],\n            \"children\": [\n                \"my-child\",\n                \"my-child2\"\n            ]\n        },\n        {\n            \"name\": \"my-child\",\n            \"displayName\": \"My Child Service\",\n            \"description\": \"Example child service\",\n            \"url\": null,\n            \"children\": null\n        },\n        {\n            \"name\": \"my-child2\",\n            \"displayName\": \"My Child Service2\",\n            \"description\": \"Example child service2\",\n            \"url\": null,\n            \"children\": null\n        },\n        {\n            \"name\": \"http-metric-test-app\",\n            \"displayName\": \"Test Application for HTTP Health Check\",\n            \"description\": \"A test application that has one endpoint to simulate different HTTP status codes.\",\n            \"url\": \"http://localhost:8082/api/ready\",\n            \"children\": null,\n            \"healthChecks\": [\n                {\n                    \"name\": \"exampleHttpTest\",\n                    \"description\": \"Check to see if request contains failed status code and/or request duration greater than specified threshold.\",\n                    \"definition\": {\n                        \"url\": \"http://localhost:8082/api/ready\",\n                        \"followRedirects\": true,\n                        \"authorizationHeader\": \"test-header\",\n                        \"conditions\": [\n                            {\n                                \"status\": \"Online\",\n                                \"statusCodes\": [\n                                    200\n                                ],\n                                \"type\": \"HttpStatusCode\"\n                            },\n                            {\n                                \"status\": \"Degraded\",\n                                \"responseTime\": \"00:00:02\",\n                                \"type\": \"HttpResponseTime\"\n                            }\n                        ]\n                    },\n                    \"type\": \"httpRequest\"\n                }\n            ]\n        }\n    ],\n    \"rootServices\": [\n        \"my-root\",\n        \"http-metric-test-app\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/config/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"config",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Service Hierarchy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"services\": [\n        {\n            \"name\": \"my-root\",\n            \"displayName\": \"My Root Service\",\n            \"description\": \"Example root service\",\n            \"url\": null,\n            \"healthChecks\": [\n                {\n                    \"name\": \"Root-Health2\",\n                    \"description\": \"What Another Health Check?\",\n                    \"type\": \"prometheusMetric\",\n                    \"definition\": {\n                        \"duration\": \"420.03:14:56.1667000\",\n                        \"expression\": \"Expression\",\n                        \"conditions\": [\n                            {\n                                \"healthOperator\": \"GreaterThan\",\n                                \"threshold\": 1.0,\n                                \"healthStatus\": \"Online\"\n                            }\n                        ]\n                    }\n                }\n            ],\n            \"children\": [\"my-CHILD\"]\n        },\n        {\n            \"name\": \"MY-child\",\n            \"displayName\": \"My Child Service!!!!\",\n            \"description\": \"Example child service NEAT!\",\n            \"url\": null,\n            \"healthChecks\": [\n                {\n                    \"name\": \"Not-RootHealth\",\n                    \"description\": \"Moved from Root\",\n                    \"type\": \"prometheusMetric\",\n                    \"definition\": {\n                        \"duration\": \"1.03:14:56.1667000\",\n                        \"expression\": \"Not expresso, Expression!!!\",\n                        \"conditions\": [\n                            {\n                                \"healthOperator\": \"NotEqual\",\n                                \"threshold\": 1,\n                                \"healthStatus\": \"Degraded\"\n                            }\n                        ]\n                    }\n                }\n            ],\n            \"children\": [\"sub-SUB-service\"]\n        },\n        {\n            \"name\": \"MY-child2\",\n            \"displayName\": \"My Child Service2!!!!\",\n            \"description\": \"Example child service NEAT2!\",\n            \"url\": null,\n            \"children\": [\"sub-SUB-service\"]\n        },\n        {\n            \"name\": \"sub-sub-service\",\n            \"displayName\": \"New Sub Service\",\n            \"description\": \"Example sub-sub-service.\",\n            \"url\": null,\n            \"children\": []\n        },\n        {\n            \"name\": \"another-root\",\n            \"displayName\": \"My Second Root Service\"\n        }\n    ],\n    \"rootServices\": [\n        \"my-ROOT\",\n        \"another-ROOT\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/config/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"config",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Update Service Hierarchy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"services\": [\n        {\n            \"name\": \"my-root\",\n            \"displayName\": \"My Root Service\",\n            \"description\": \"Example root service\",\n            \"url\": null,\n            \"healthChecks\": [\n                {\n                    \"name\": \"Root-Health2\",\n                    \"description\": \"What Another Health Check?\",\n                    \"type\": \"prometheusMetric\",\n                    \"definition\": {\n                        \"duration\": \"420.03:14:56.1667000\",\n                        \"expression\": \"Expression\",\n                        \"conditions\": [\n                            {\n                                \"healthOperator\": \"GreaterThan\",\n                                \"threshold\": 1.0,\n                                \"healthStatus\": \"Online\"\n                            }\n                        ]\n                    }\n                }\n            ],\n            \"children\": [\"my-CHILD\"]\n        },\n        {\n            \"name\": \"MY-child\",\n            \"displayName\": \"My Child Service!!!!\",\n            \"description\": \"Example child service NEAT!\",\n            \"url\": null,\n            \"healthChecks\": [\n                {\n                    \"name\": \"Not-RootHealth\",\n                    \"description\": \"Moved from Root\",\n                    \"type\": \"prometheusMetric\",\n                    \"definition\": {\n                        \"duration\": \"1.03:14:56.1667000\",\n                        \"expression\": \"Not expresso, Expression!!!\",\n                        \"conditions\": [\n                            {\n                                \"healthOperator\": \"NotEqual\",\n                                \"threshold\": 1,\n                                \"healthStatus\": \"Degraded\"\n                            }\n                        ]\n                    }\n                }\n            ],\n            \"children\": [\"sub-SUB-service\"]\n        },\n        {\n            \"name\": \"MY-child2\",\n            \"displayName\": \"My Child Service2!!!!\",\n            \"description\": \"Example child service NEAT2!\",\n            \"url\": null,\n            \"children\": [\"sub-SUB-service\"]\n        },\n        {\n            \"name\": \"sub-sub-service\",\n            \"displayName\": \"New Sub Service\",\n            \"description\": \"Example sub-sub-service.\",\n            \"url\": null,\n            \"children\": []\n        },\n        {\n            \"name\": \"another-root\",\n            \"displayName\": \"My Second Root Service\"\n        }\n    ],\n    \"rootServices\": [\n        \"my-ROOT\",\n        \"another-ROOT\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/config/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"config",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Tenant",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/config/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"config",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Delete Tenant",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/config/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"config",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Environments",
			"item": [
				{
					"name": "Get Aggregate Health - Environments",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/environments",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"environments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific Environment",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/environments/{{TEST_ENVIRONMENT2}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"environments",
								"{{TEST_ENVIRONMENT2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Environment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{TEST_ENVIRONMENT2}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/environments",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"environments"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Create Environment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{TEST_ENVIRONMENT2}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/environments",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"environments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Environment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/environments/{{TEST_ENVIRONMENT2}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"environments",
								"{{TEST_ENVIRONMENT2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Delete Environment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/environments/{{TEST_ENVIRONMENT2}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"environments",
								"{{TEST_ENVIRONMENT2}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tenants",
			"item": [
				{
					"name": "Get Aggregate Health - Tenants",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/tenants",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"tenants"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Health",
			"item": [
				{
					"name": "Get Tenant Health",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific Service Health",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}/services/{{TEST_SERVICE}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}",
								"services",
								"{{TEST_SERVICE}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Self Health Check",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health/{{SONAR_ENVIRONMENT}}/tenants/sonar",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health",
								"{{SONAR_ENVIRONMENT}}",
								"tenants",
								"sonar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Service Health - Root",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var now = Date.now();",
									"pm.environment.set(\"now\", new Date(now));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timestamp\": \"{{now}}\",\n    \"aggregateStatus\": \"online\",\n    \"healthChecks\": {\n        \"RootHealth\": \"online\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}/services/{{TEST_SERVICE}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}",
								"services",
								"{{TEST_SERVICE}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Post Service Health - Root",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var now = Date.now();",
									"pm.environment.set(\"now\", new Date(now));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timestamp\": \"{{now}}\",\n    \"aggregateStatus\": \"online\",\n    \"healthChecks\": {\n        \"RootHealth\": \"online\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}/services/{{TEST_SERVICE}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}",
								"services",
								"{{TEST_SERVICE}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Service Health - Child",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var now = Date.now();",
									"pm.environment.set(\"now\", new Date(now));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timestamp\": \"{{now}}\",\n    \"aggregateStatus\": \"degraded\",\n    \"healthChecks\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}/services/{{TEST_CHILD_SERVICE}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}",
								"services",
								"{{TEST_CHILD_SERVICE}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Post Service Health - Child",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var now = Date.now();",
									"pm.environment.set(\"now\", new Date(now));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timestamp\": \"{{now}}\",\n    \"aggregateStatus\": \"degraded\",\n    \"healthChecks\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}/services/{{TEST_CHILD_SERVICE}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}",
								"services",
								"{{TEST_CHILD_SERVICE}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Health-Check-Data",
			"item": [
				{
					"name": "Get Service Health Check Data (no start and end specified)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health-check-data/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}/services/{{TEST_SERVICE}}/health-check/{{TEST_HEALTH_CHECK}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health-check-data",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}",
								"services",
								"{{TEST_SERVICE}}",
								"health-check",
								"{{TEST_HEALTH_CHECK}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Service Health Check Data (start and end specified)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health-check-data/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}/services/{{TEST_SERVICE}}/health-check/{{TEST_HEALTH_CHECK}}?queryStart={{now_minus_61m}}&queryEnd={{now}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health-check-data",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}",
								"services",
								"{{TEST_SERVICE}}",
								"health-check",
								"{{TEST_HEALTH_CHECK}}"
							],
							"query": [
								{
									"key": "queryStart",
									"value": "{{now_minus_61m}}"
								},
								{
									"key": "queryEnd",
									"value": "{{now}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Service Health Check Data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"healthCheckSamples\": {\n        \"health-check-1\": [\n            [\"{{now_minus_61m}}\", 0.0],\n            [\"{{now_minus_30m}}\", 0.0],\n            [\"{{now_minus_20s}}\", 1.0],\n            [\"{{now_minus_15s}}\", 2.0],\n            [\"{{now_minus_10s}}\", 3.0],\n            [\"{{now_minus_5s}}\", 4.0],\n            [\"{{now}}\", 5.0]\n        ],\n        \"health-check-2\": [\n            [\"{{now_minus_61m}}\", 0.0],\n            [\"{{now_minus_30m}}\", 0.0],\n            [\"{{now_minus_20s}}\", 0.1],\n            [\"{{now_minus_15s}}\", 0.2],\n            [\"{{now_minus_10s}}\", 0.3],\n            [\"{{now_minus_5s}}\", 0.4],\n            [\"{{now}}\", 0.5]\n        ]\n    }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health-check-data/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}/services/{{TEST_SERVICE}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health-check-data",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}",
								"services",
								"{{TEST_SERVICE}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Post Service Health Check Data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"healthCheckSamples\": {\n        \"health-check-1\": [\n            [\"{{now_minus_61m}}\", 0.0],\n            [\"{{now_minus_30m}}\", 0.0],\n            [\"{{now_minus_20s}}\", 1.0],\n            [\"{{now_minus_15s}}\", 2.0],\n            [\"{{now_minus_10s}}\", 3.0],\n            [\"{{now_minus_5s}}\", 4.0],\n            [\"{{now}}\", 5.0]\n        ],\n        \"health-check-2\": [\n            [\"{{now_minus_61m}}\", 0.0],\n            [\"{{now_minus_30m}}\", 0.0],\n            [\"{{now_minus_20s}}\", 0.1],\n            [\"{{now_minus_15s}}\", 0.2],\n            [\"{{now_minus_10s}}\", 0.3],\n            [\"{{now_minus_5s}}\", 0.4],\n            [\"{{now}}\", 0.5]\n        ]\n    }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health-check-data/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}/services/{{TEST_SERVICE}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health-check-data",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}",
								"services",
								"{{TEST_SERVICE}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var now = Date.now();",
							"pm.environment.set(\"now\", new Date(now));",
							"pm.environment.set(\"now_minus_5s\", new Date(now - 5 * 1000));",
							"pm.environment.set(\"now_minus_10s\", new Date(now - 10 * 1000));",
							"pm.environment.set(\"now_minus_15s\", new Date(now - 15 * 1000));",
							"pm.environment.set(\"now_minus_20s\", new Date(now - 20 * 1000));",
							"pm.environment.set(\"now_minus_30m\", new Date(now - 30 * 60 * 1000));",
							"pm.environment.set(\"now_minus_61m\", new Date(now - 61 * 60 * 1000));",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Health-History",
			"item": [
				{
					"name": "Get Service Health History",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health-history/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}/services/{{TEST_SERVICE}}?step=10",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health-history",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}",
								"services",
								"{{TEST_SERVICE}}"
							],
							"query": [
								{
									"key": "start",
									"value": "",
									"disabled": true
								},
								{
									"key": "end",
									"value": "",
									"disabled": true
								},
								{
									"key": "step",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tenant Health History",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/health-history/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}?step=10",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"health-history",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}"
							],
							"query": [
								{
									"key": "start",
									"value": "",
									"disabled": true
								},
								{
									"key": "end",
									"value": null,
									"disabled": true
								},
								{
									"key": "step",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Prometheus Test Data",
			"item": [
				{
					"name": "Get Prometheus Test Data (promExpression1)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROMETHEUS_BASE_URL}}/api/v1/query_range?query=promExpression1&start={{now_minus_10s}}&end={{now}}&step=1s",
							"host": [
								"{{PROMETHEUS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"query_range"
							],
							"query": [
								{
									"key": "query",
									"value": "promExpression1"
								},
								{
									"key": "start",
									"value": "{{now_minus_10s}}"
								},
								{
									"key": "end",
									"value": "{{now}}"
								},
								{
									"key": "step",
									"value": "1s"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Prometheus Test Data (promExpression2)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROMETHEUS_BASE_URL}}/api/v1/query_range?query=promExpression2&start={{now_minus_10s}}&end={{now}}&step=1s",
							"host": [
								"{{PROMETHEUS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"query_range"
							],
							"query": [
								{
									"key": "query",
									"value": "promExpression2"
								},
								{
									"key": "start",
									"value": "{{now_minus_10s}}"
								},
								{
									"key": "end",
									"value": "{{now}}"
								},
								{
									"key": "step",
									"value": "1s"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Prometheus Test Data (Root-Health)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"MetricName\": \"promExpression1\",\n    \"MetricType\": \"Gauge\",\n    \"HelpText\": \"example help text\",\n    \"Labels\": {\n        \"__name__\": \"promExpression1\",\n        \"foo2\": \"val\"\n    },\n    \"Timeseries\": [\n        [\"{{now}}\", 0.97],\n        [\"{{now_minus_5s}}\", 0.98],\n        [\"{{now_minus_10s}}\", 0.99]\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/test/data",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"test",
								"data"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Create Prometheus Test Data (Root-Health)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"MetricName\": \"promExpression1\",\n    \"MetricType\": \"Gauge\",\n    \"HelpText\": \"example help text\",\n    \"Labels\": {\n        \"__name__\": \"promExpression1\",\n        \"foo2\": \"val\"\n    },\n    \"Timeseries\": [\n        [\"{{now}}\", 0.97],\n        [\"{{now_minus_5s}}\", 0.98],\n        [\"{{now_minus_10s}}\", 0.99]\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/test/data",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"test",
								"data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Prometheus Test Data (Root-Health2)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"MetricName\": \"promExpression2\",\n    \"MetricType\": \"Gauge\",\n    \"HelpText\": \"example help text\",\n    \"Labels\": {\n        \"__name__\": \"promExpression2\",\n        \"foo2\": \"val\"\n    },\n    \"Timeseries\": [\n        [\"{{now}}\", 1.97],\n        [\"{{now_minus_5s}}\", 1.98],\n        [\"{{now_minus_10s}}\", 1.99]\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/test/data",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"test",
								"data"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Create Prometheus Test Data (Root-Health2)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"MetricName\": \"promExpression2\",\n    \"MetricType\": \"Gauge\",\n    \"HelpText\": \"example help text\",\n    \"Labels\": {\n        \"__name__\": \"promExpression2\",\n        \"foo2\": \"val\"\n    },\n    \"Timeseries\": [\n        [\"{{now}}\", 1.97],\n        [\"{{now_minus_5s}}\", 1.98],\n        [\"{{now_minus_10s}}\", 1.99]\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/test/data",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"test",
								"data"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var now = Date.now();",
							"pm.environment.set(\"now\", new Date(now));",
							"pm.environment.set(\"now_minus_5s\", new Date(now - 5 * 1000));",
							"pm.environment.set(\"now_minus_10s\", new Date(now - 10 * 1000));",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/user",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Get User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/user",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Create User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/user",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Permissions",
			"item": [
				{
					"name": "Get User Permission",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/permissions",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Get User Permission",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/permissions",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User with Global Admin Permission",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permission\": \"Admin\",\n  \"userEmail\": \"{{TEST_EMAIL}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/permissions",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Create User with Global Admin Permission Copy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permission\": \"Admin\",\n  \"userEmail\": \"{{TEST_EMAIL}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/permissions",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User with Admin Permission",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permission\": \"Admin\",\n  \"userEmail\": \"{{TEST_EMAIL}}\",\n  \"environment\":\"{{TEST_ENVIRONMENT}}\",\n  \"tenant\":\"{{TEST_TENANT}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/permissions",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Create User with Admin Permission",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permission\": \"Admin\",\n  \"userEmail\": \"{{TEST_EMAIL}}\",\n  \"environment\":\"{{TEST_ENVIRONMENT}}\",\n  \"tenant\":\"{{TEST_TENANT}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/permissions",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Standard Permission",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permission\": \"Standard\",\n  \"userEmail\": \"{{TEST_EMAIL}}\",\n  \"environment\":\"{{TEST_ENVIRONMENT}}\",\n  \"tenant\":\"{{TEST_TENANT}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/permissions",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Create Standard Permission",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permission\": \"Standard\",\n  \"userEmail\": \"{{TEST_EMAIL}}\",\n  \"environment\":\"{{TEST_ENVIRONMENT}}\",\n  \"tenant\":\"{{TEST_TENANT}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/permissions",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Permission",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permission\": \"Standard\",\n  \"userEmail\": \"kly@revacomm.com\",\n  \"environment\":\"{{TEST_ENVIRONMENT}}\",\n  \"tenant\":\"{{TEST_TENANT}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/permissions/40b0c4fa-c1e8-408b-b9ce-de4b621a0086",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"permissions",
								"40b0c4fa-c1e8-408b-b9ce-de4b621a0086"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Update User Permission",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permission\": \"Standard\",\n  \"userEmail\": \"{{TEST_EMAIL}}\",\n  \"environment\":\"{{TEST_ENVIRONMENT}}\",\n  \"tenant\":\"{{TEST_TENANT}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/permissions/40b0c4fa-c1e8-408b-b9ce-de4b621a0086",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"permissions",
								"40b0c4fa-c1e8-408b-b9ce-de4b621a0086"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User Permission",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/permissions/431c691b-d259-47bb-9b1e-5a53f6896f1f",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"permissions",
								"431c691b-d259-47bb-9b1e-5a53f6896f1f"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWT] Delete User Permission",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ID_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/permissions/431c691b-d259-47bb-9b1e-5a53f6896f1f",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"permissions",
								"431c691b-d259-47bb-9b1e-5a53f6896f1f"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Versions",
			"item": [
				{
					"name": "Post Service Version",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var now = Date.now();",
									"pm.environment.set(\"now\", new Date(now));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timestamp\": \"{{now}}\",\n    \"versionChecks\": {\n      \"HttpResponseBody\": \"0.0.0-test\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/version/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}/services/{{TEST_SERVICE}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"version",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}",
								"services",
								"{{TEST_SERVICE}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Service Version",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var now = Date.now();",
									"pm.environment.set(\"now\", new Date(now));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SONAR_BASE_URL}}/api/v2/version/{{TEST_ENVIRONMENT}}/tenants/{{TEST_TENANT}}/services/{{TEST_SERVICE}}",
							"host": [
								"{{SONAR_BASE_URL}}"
							],
							"path": [
								"api",
								"v2",
								"version",
								"{{TEST_ENVIRONMENT}}",
								"tenants",
								"{{TEST_TENANT}}",
								"services",
								"{{TEST_SERVICE}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Readiness Endpoint",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{SONAR_BASE_URL}}/api/ready",
					"host": [
						"{{SONAR_BASE_URL}}"
					],
					"path": [
						"api",
						"ready"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{SONAR_API_KEY}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "ApiKey",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}