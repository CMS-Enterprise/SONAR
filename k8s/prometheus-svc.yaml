apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 4Gi
  storageClassName: "local-path"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 5s
      evaluation_interval: 30s
    scrape_configs:
      - job_name: test-metric-app
        dns_sd_configs:
          - names:
              - test-metric-app.test-apps.svc.cluster.local
            type: A
            port: 2020
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  selector:
    app.kubernetes.io/name: prometheus
  ports:
    - protocol: TCP
      port: 9090
      name: http
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: prometheus
  name: prometheus
spec:
  replicas: 1
  serviceName: prometheus
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus
    spec:
      containers:
        - image: prom/prometheus:v2.38.0
          name: prometheus
          args:
            - "--web.enable-remote-write-receiver"
            - "--storage.tsdb.retention.time=10d"
            - "--config.file=/etc/prometheus/config/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.console.libraries=/usr/share/prometheus/console_libraries"
            - "--web.console.templates=/usr/share/prometheus/consoles"
          volumeMounts:
            - mountPath: "/prometheus"
              name: prometheus-data
            - mountPath: "/etc/prometheus/config"
              name: prometheus-config
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-data
        - name: prometheus-config
          configMap:
            name: prometheus-config
